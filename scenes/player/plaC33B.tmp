[gd_scene load_steps=25 format=3 uid="uid://pj7ekpl25jie"]

[ext_resource type="Texture2D" uid="uid://3k48njkaj2u" path="res://assets/sprites/player/player-idle.png" id="1_56o85"]
[ext_resource type="Texture2D" uid="uid://wnkgrhask07c" path="res://assets/sprites/player/player-jump.png" id="3_7olbk"]
[ext_resource type="Texture2D" uid="uid://er0a8iint3ho" path="res://assets/sprites/player/player-run-shoot.png" id="4_3g8qu"]
[ext_resource type="Script" path="res://scripts/player/player_control.gd" id="5_u2hq8"]
[ext_resource type="PackedScene" uid="uid://vctqj3rew782" path="res://scenes/state_machines/state_machine.tscn" id="6_rmh1a"]
[ext_resource type="Script" path="res://scripts/player/states/player_idle.gd" id="7_ofad7"]
[ext_resource type="Script" path="res://scripts/player/states/player_running.gd" id="8_c5vwy"]

[sub_resource type="GDScript" id="GDScript_qvmgm"]
script/source = "extends CharacterBody2D

class_name Player

@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D
var states: PlayerStatesNames = PlayerStatesNames.new()
#@export var SPEED: float = 300.0
#@export var JUMP_VELOCITY: float = -400.0
#@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D


#func _physics_process(delta: float) -> void:
	# Add the gravity.
#	if not is_on_floor():
#		velocity += get_gravity() * delta

	# Handle jump.
#	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
#		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	# Get input direction: -1, 0, 1
#	var direction := Input.get_axis(\"left\", \"right\")

	# Flip the sprite
#	if direction > 0:
#		animated_sprite.flip_h = false
#	elif direction < 0:
#		animated_sprite.flip_h = true

	# Play animations
#	if is_on_floor():
#		if direction == 0:
#			animated_sprite.play(\"idle\")
#		else:
#			animated_sprite.play(\"run\")
#	else:
		#print(velocity.y)
#		if velocity.y < 0:
#			animated_sprite.play(\"jump_up\")
#		elif velocity.y > 0:
#			animated_sprite.play(\"jump_down\")

	# Apply movement
#	if direction:
#		velocity.x = direction * SPEED
#	else:
#		velocity.x = move_toward(velocity.x, 0, SPEED)

#	move_and_slide()
"

[sub_resource type="AtlasTexture" id="AtlasTexture_vjmhc"]
atlas = ExtResource("1_56o85")
region = Rect2(0, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_lr1vc"]
atlas = ExtResource("1_56o85")
region = Rect2(32, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_eb7i5"]
atlas = ExtResource("1_56o85")
region = Rect2(64, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_awhjk"]
atlas = ExtResource("1_56o85")
region = Rect2(96, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_l0h6v"]
atlas = ExtResource("1_56o85")
region = Rect2(128, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_27565"]
atlas = ExtResource("1_56o85")
region = Rect2(160, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_jx7j1"]
atlas = ExtResource("3_7olbk")
region = Rect2(32, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_cixiv"]
atlas = ExtResource("3_7olbk")
region = Rect2(0, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_g5hrs"]
atlas = ExtResource("4_3g8qu")
region = Rect2(0, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_65itv"]
atlas = ExtResource("4_3g8qu")
region = Rect2(32, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_gev0t"]
atlas = ExtResource("4_3g8qu")
region = Rect2(64, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_v3k6k"]
atlas = ExtResource("4_3g8qu")
region = Rect2(96, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_ikefg"]
atlas = ExtResource("4_3g8qu")
region = Rect2(128, 0, 32, 38)

[sub_resource type="AtlasTexture" id="AtlasTexture_tqcmq"]
atlas = ExtResource("4_3g8qu")
region = Rect2(160, 0, 32, 38)

[sub_resource type="SpriteFrames" id="SpriteFrames_do7bk"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_vjmhc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lr1vc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eb7i5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_awhjk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l0h6v")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_27565")
}],
"loop": true,
"name": &"idle",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jx7j1")
}],
"loop": true,
"name": &"jump_down",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_cixiv")
}],
"loop": true,
"name": &"jump_up",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5hrs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_65itv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gev0t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v3k6k")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ikefg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tqcmq")
}],
"loop": true,
"name": &"run",
"speed": 10.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_8cau5"]
radius = 10.0499

[node name="Player" type="CharacterBody2D"]
position = Vector2(0, -19)
script = SubResource("GDScript_qvmgm")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_do7bk")
animation = &"jump_down"
autoplay = "idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 9)
shape = SubResource("CircleShape2D_8cau5")

[node name="PlayerControl" type="Node" parent="."]
script = ExtResource("5_u2hq8")

[node name="StateMachine" parent="." node_paths=PackedStringArray("default_state") instance=ExtResource("6_rmh1a")]
default_state = NodePath("Idle")

[node name="Idle" type="Node" parent="StateMachine"]
script = ExtResource("7_ofad7")
SPEED = null

[node name="Running" type="Node" parent="StateMachine"]
script = ExtResource("8_c5vwy")

[node name="Node" type="Node" parent="."]
